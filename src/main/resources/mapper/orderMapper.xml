<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seckill.seckill.dao.OrderMapper">

    <update id="insertOrder" parameterType="com.seckill.seckill.entity.Order" useGeneratedKeys="true" keyProperty="id">
        insert into orders (user_id, total_price, address, create_time)
        values (#{userId}, #{totalPrice}, #{address}, now())
        ;
    </update>

    <update id="insertOrderGoods">
        insert into order_goods (order_id, goods_id, amount, price)
        values
        (#{orderId}, #{goodsId}, #{amount}, #{price})
        ;
    </update>

    <select id="selectOrderGoods">
        select g.id, name, g.price, stock, description, image, og.id, amount, og.price
        from goods g
        join order_goods og
        on g.id = og.goods_id
        where og.order_id = #{orderId}
        ;
    </select>
    
    <select id="selectOrderById">
        select id, user_id, total_price, address, payment_time, create_time, status, payment_method
        from orders
        where user_id = #{userId}
        and id = #{orderId}
        ;
    </select>
    
        <select id="selectOrders">
            select id, user_id, total_price, address, payment_time, create_time, status, payment_method
            from orders
            where user_id = #{userId}
            <if test="mode==0">
                and status = 0
            </if>
            <if test="mode==1">
                and status = 1
            </if>
            order by create_time desc
            limit #{offset}, #{limit}
            ;
        </select>

    <select id="selectOrderRows">
        select count(distinct id)
        from orders
        where user_id = #{userId}
        <if test="mode==0">
            and status = 0
        </if>
        <if test="mode==1">
            and status = 1
        </if>
        ;
    </select>

    <update id="placeOrder">
        update orders
        set status = 1, payment_time = now(), payment_method = #{paymentMethod}
        where user_id = #{userId}
        and id = #{orderId}
        ;
    </update>
</mapper>